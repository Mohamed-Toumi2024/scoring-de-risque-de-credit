pipeline {
    agent any

    environment {
        PYTHON = "/usr/bin/python3"
        VENV = ".venv"
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Récupération du code depuis Git...'
                checkout scm
            }
        }

        stage('Setup Python Environment') {
            steps {
                echo 'Création de l’environnement virtuel et installation des dépendances...'
                sh '''
                    if [ ! -d "$VENV" ]; then
                        python3 -m venv $VENV
                    fi
                    source $VENV/bin/activate
                    pip install --upgrade pip
                    pip install -r requirements.txt
                '''
            }
        }

        stage('Train Model') {
            steps {
                echo 'Entraînement du modèle XGBoost...'
                sh '''
                    source $VENV/bin/activate
                    python model_pipeline.py
                '''
            }
        }

        stage('Deploy API') {
            steps {
                echo 'Lancement de l’API FastAPI...'
                sh '''
                    source $VENV/bin/activate
                    nohup uvicorn main:app --host 0.0.0.0 --port 8000 &
                    sleep 5
                '''
            }
        }

        stage('Test API') {
            steps {
                echo 'Test de l’API pour vérifier le déploiement...'
                sh '''
                    curl -f http://127.0.0.1:8000/docs || exit 1
                '''
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline exécuté avec succès !'
        }
        failure {
            echo '❌ Le pipeline a échoué. Vérifiez les logs Jenkins.'
        }
    }
}
